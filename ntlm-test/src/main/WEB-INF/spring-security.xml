<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:s="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <s:http auto-config="true" use-expressions="true">
        <s:intercept-url pattern="/favicon.ico" access="permitAll"/>
        <s:intercept-url pattern="/login*" access="isAnonymous"/>
        <s:intercept-url pattern="/*" access="hasAuthority('ROLE_USER')"/>
    </s:http>

    <context:property-placeholder
            location="classpath:/activedirectory.properties"/>

    <bean id="activeDirectoryAuthenticationProvider"
          class="org.springframework.security.ldap.authentication.ad.ActiveDirectoryLdapAuthenticationProvider">
        <constructor-arg value="${activedirectory.domain}"/>
        <constructor-arg value="${activedirectory.server}"/>
        <property name="convertSubErrorCodesToExceptions" value="true"/>
        <property name="userDetailsContextMapper">
            <bean class="org.nkey.test.ntlm.ldap.ActiveDirectoryLdapUserDetailsMapper"/>
        </property>
        <property name="authoritiesMapper">
            <bean class="org.springframework.security.core.authority.mapping.SimpleAuthorityMapper">
                <property name="defaultAuthority" value="ROLE_USER"/>
            </bean>
        </property>
    </bean>

    <s:authentication-manager>
        <s:authentication-provider ref='activeDirectoryAuthenticationProvider'/>
    </s:authentication-manager>

</beans>